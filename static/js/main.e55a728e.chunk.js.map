{"version":3,"sources":["images/profile-round.png","components/ChatList.js","images/profile-robot.gif","components/YeetbotChatList.js","components/ChatListStack.js","components/MessageNative.js","components/MessageResponse.js","components/MessageArray.js","App.js","reportWebVitals.js","index.js"],"names":["ChatList","className","src","image","alt","ChatListStack","YeetbotChatList","MessageNative","message","MessageResponse","split","map","i","key","MessageArray","messages","index","toString","App","useState","chat","setChat","setMessages","answered","setAnswered","useEffect","axios","post","then","res","data","catch","e","console","log","type","value","onKeyUp","preventDefault","placeholder","onChange","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e55a728e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile-round.158803d4.png\";","import React from 'react';\r\nimport image from '../images/profile-round.png';\r\nimport '../styles/chatlist.css';\r\n\r\nconst ChatList = () => {\r\n    return (\r\n        <div className=\"chatlist\">\r\n            <div className=\"chatlist-outter\">\r\n                <div className=\"image-div\">\r\n                    <img src={image} className=\"chatlist-picture\" alt=\"profile\" />\r\n                </div>\r\n                <div className=\"right-div\">\r\n                    <div className=\"top-div\">\r\n                        <div className=\"name\">\r\n                            Yeet Yeetus\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            9:30 PM\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat-description\">\r\n                        How's the yeet my dude\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","export default __webpack_public_path__ + \"static/media/profile-robot.982a870e.gif\";","import React from 'react';\r\nimport image from '../images/profile-robot.gif';\r\nimport '../styles/yeetbotchatlist.css';\r\n\r\nconst ChatList = () => {\r\n    return (\r\n        <div className=\"chatlist-yeetbot\">\r\n            <div className=\"chatlist-outter\">\r\n                <div className=\"image-div\">\r\n                    <img src={image} className=\"chatlist-picture\" alt=\"profile\" />\r\n                </div>\r\n                <div className=\"right-div\">\r\n                    <div className=\"top-div\">\r\n                        <div className=\"name\">\r\n                            yeetBOT\r\n                        </div>\r\n                        <div className=\"time\">\r\n                            9:35 PM\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"chat-description\">\r\n                        Yeetest Bot that has ever Yeet\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatList;","import React from 'react'\r\nimport ChatList from './ChatList';\r\nimport YeetbotChatList from './YeetbotChatList';\r\n\r\nconst ChatListStack = () => {\r\n    return (\r\n        <div>\r\n            <YeetbotChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n            <ChatList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatListStack\r\n","import React from 'react';\r\nimport '../styles/messagenative.css';\r\n\r\nconst MessageNative = ({ message }) => {\r\n    return (\r\n        <div className=\"native-box\">\r\n            <p className=\"native-message\">{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageNative;","import React from 'react';\r\nimport '../styles/messageresponse.css';\r\n\r\nconst MessageResponse = ({ message }) => {\r\n    return (\r\n        <div className=\"response-box\">\r\n            <p className=\"response-message\">\r\n            {message.split(\"\\n\").map((i, key) => {\r\n                return <span key={key}>{i}{<br />}</span>\r\n            })}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageResponse;","import React from 'react';\r\nimport MessageNative from './MessageNative';\r\nimport MessageResponse from './MessageResponse';\r\n\r\nconst MessageArray = ({ messages }) => {\r\n    return (\r\n        <div>\r\n            { messages.map((message, index) => {\r\n                if (index % 2 === 0) {\r\n                    return (\r\n                        <MessageNative message={message} key={index.toString()} />\r\n                    )\r\n                } else {\r\n                    return <MessageResponse message={message} key={index.toString()} />\r\n                }\r\n            }) }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageArray;","import React, { useState, useEffect } from \"react\";\r\nimport ChatListStack from './components/ChatListStack';\r\nimport MessageArray from \"./components/MessageArray\";\r\nimport './App.css';\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n  const [chat, setChat] = useState(\"\");\r\n  const [messages, setMessages] = useState([])\r\n  const [answered, setAnswered] = useState(true)\r\n\r\n  const addMessage = () => {\r\n    setMessages([...messages, chat]);\r\n    setChat(\"\");\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (e.key === \"Enter\" && chat !== \"\") {\r\n      addMessage();\r\n      setAnswered(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => { \r\n    if(!answered){\r\n      axios\r\n        .post(\"https://yeetbot-backend-flask.herokuapp.com/chat\", {\r\n          messages: messages,\r\n        })\r\n        .then((res) => {\r\n          setMessages([...messages, res.data])\r\n        })\r\n        .catch((e) => console.log(e))\r\n      setAnswered(true);\r\n    }}, \r\n  [messages, answered]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"outer-wrapper\">\r\n        <div className=\"left-right-outer-wrapper\">\r\n          <div className=\"left-wrapper\">\r\n            <div className=\"left-outer-icons\">\r\n              <div className=\"material-icons icon top\">person</div>\r\n              <div className=\"material-icons icon selected\">textsms</div>\r\n              <div className=\"material-icons icon\">person_add</div>\r\n              <div className=\"material-icons icon\">watch_later</div>\r\n              <div className=\"material-icons icon\">article</div>\r\n              <div className=\"material-icons icon\">favorite_border</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right-outer-main\">\r\n            <div className=\"upper-main\">\r\n              <div className=\"upper-tabs tabs-selected\">\r\n                All  \r\n              </div>\r\n              <div className=\"upper-tabs\">  \r\n                Friends\r\n              </div>\r\n              <div className=\"upper-tabs\">\r\n                Groups \r\n              </div>\r\n              <div className=\"upper-tabs\">\r\n                Official accounts\r\n              </div>\r\n              <div className=\"upper-tabs\">\r\n                OpenChats  \r\n              </div>\r\n            </div>\r\n            <div className=\"central-main\">\r\n              <div className=\"left-chat\">\r\n                <div className=\"search-container\">\r\n                  <div className=\"search-bar\">\r\n                    Search for chats and messages\r\n                  </div>\r\n                </div>\r\n                <div className=\"chat-list\">\r\n                  <ChatListStack />\r\n                </div>\r\n              </div>\r\n              <div className=\"right-chat\">\r\n                <div className=\"title-chat\">\r\n                  <div className=\"left-title-chat\">\r\n                    <p className=\"yeetbot-name\">yeetBot</p>\r\n                    <div className=\"material-icons icon-smaller\">volume_down</div>\r\n                    <div className=\"material-icons icon-smaller\">open_in_new</div>\r\n                  </div>\r\n                  <div className=\"right-title-chat\">\r\n                    <div className=\"material-icons icon-small\">search</div>\r\n                    <div className=\"material-icons icon-small\">call</div>\r\n                    <div className=\"material-icons icon-small\">more_vert</div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"message-array\">\r\n                  <MessageArray messages={messages} />\r\n                </div>\r\n                <input \r\n                  className=\"chat-input\"\r\n                  type=\"text\" \r\n                  value={chat} \r\n                  onKeyUp={handleSubmit} \r\n                  placeholder=\"Enter a message\"\r\n                  onChange={e => setChat(e.target.value)} />\r\n                <div className=\"bottom-icons\">\r\n                  <div className=\"bottom-left\">\r\n                    <div className=\"material-icons bottom-icon-left\">attach_file</div>\r\n                    <div className=\"material-icons bottom-icon-left\">bookmark_border</div>\r\n                    <div className=\"material-icons bottom-icon-left\">crop</div>\r\n                  </div>\r\n                  <div className=\"bottom-right\">\r\n                    <div className=\"material-icons bottom-icon-right\">sentiment_satisfied_alt</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}